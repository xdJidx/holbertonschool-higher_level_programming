>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

The second argument is optional - by default, it is 98.

>>> add_integer(2)
100

>>> add_integer(-2, -2)
-4

>>> add_integer(100.3, -2)
98

>>> add_integer(-1, 1.3)
0

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer


Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:

>>> add_integer(2, float('inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer


>>> add_integer("hello", 3)
Traceback (most recent call last):
TypeError: a must be an integer

 >>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
